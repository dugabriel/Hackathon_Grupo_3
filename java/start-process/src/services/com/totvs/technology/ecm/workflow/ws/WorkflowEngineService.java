
package services.com.totvs.technology.ecm.workflow.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import services.net.java.dev.jaxb.array.IntArray;
import services.net.java.dev.jaxb.array.StringArray;
import services.net.java.dev.jaxb.array.StringArrayArray;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WorkflowEngineService", targetNamespace = "http://ws.workflow.ecm.technology.totvs.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    services.com.totvs.technology.ecm.workflow.ws.ObjectFactory.class,
    services.net.java.dev.jaxb.array.ObjectFactory.class
})
public interface WorkflowEngineService {


    /**
     * 
     * @param newProcess
     * @param password
     * @param companyId
     * @param attachments
     * @param processId
     * @param colleagueId
     * @param username
     * @param overWrite
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "importProcess")
    @WebResult(name = "result", partName = "result")
    public String importProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "attachments", partName = "attachments")
        AttachmentArray attachments,
        @WebParam(name = "newProcess", partName = "newProcess")
        boolean newProcess,
        @WebParam(name = "overWrite", partName = "overWrite")
        boolean overWrite,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param newDueDate
     * @param timeInSecods
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "setDueDate")
    @WebResult(name = "result", partName = "result")
    public String setDueDate(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "newDueDate", partName = "newDueDate")
        String newDueDate,
        @WebParam(name = "timeInSecods", partName = "timeInSecods")
        int timeInSecods)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "takeProcessTask")
    @WebResult(name = "result", partName = "result")
    public String takeProcessTask(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArrayArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getInstanceCardData")
    @WebResult(name = "CardData", partName = "CardData")
    public StringArrayArray getInstanceCardData(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "createWorkFlowProcessVersion")
    @WebResult(name = "result", partName = "result")
    public String createWorkFlowProcessVersion(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param userId
     * @param cardFieldName
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "getCardValue")
    @WebResult(name = "content", partName = "content")
    public String getCardValue(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "cardFieldName", partName = "cardFieldName")
        String cardFieldName)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessDefinitionDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAllProcessAvailableToExport")
    @WebResult(name = "result", partName = "result")
    public ProcessDefinitionDtoArray getAllProcessAvailableToExport(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param processInstanceId
     * @param threadSequence
     * @param comments
     * @param attachments
     * @param colleagueIds
     * @param managerMode
     * @param appointment
     * @param choosedState
     * @param userId
     * @param completeTask
     * @param password
     * @param companyId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArrayArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "saveAndSendTask")
    @WebResult(name = "result", partName = "result")
    public StringArrayArray saveAndSendTask(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "choosedState", partName = "choosedState")
        int choosedState,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "completeTask", partName = "completeTask")
        boolean completeTask,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        StringArrayArray cardData,
        @WebParam(name = "appointment", partName = "appointment")
        ProcessTaskAppointmentDtoArray appointment,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param iTask
     * @param threadSequence
     * @param password
     * @param companyId
     * @param condition
     * @param iTaskAutom
     * @param comments
     * @param colleagueIds
     * @param managerMode
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "setAutomaticDecisionClassic")
    @WebResult(name = "result", partName = "result")
    public KeyValueDtoArray setAutomaticDecisionClassic(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "iTaskAutom", partName = "iTaskAutom")
        int iTaskAutom,
        @WebParam(name = "iTask", partName = "iTask")
        int iTask,
        @WebParam(name = "condition", partName = "condition")
        int condition,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentDescription
     * @param persistenceType
     * @param customEvents
     * @param datasetName
     * @param update
     * @param generalInfo
     * @param relatedDatasets
     * @param cardDescription
     * @param colleagueId
     * @param processAttachs
     * @param newProcess
     * @param password
     * @param companyId
     * @param processId
     * @param cardAttachs
     * @param parentDocumentId
     * @param username
     * @param overWrite
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.WebServiceMessage
     * @throws Exception_Exception
     */
    @WebMethod(action = "importProcessWithCardAndRelatedDatasets")
    @WebResult(name = "result", partName = "result")
    public WebServiceMessage importProcessWithCardAndRelatedDatasets(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processAttachs", partName = "processAttachs")
        AttachmentArray processAttachs,
        @WebParam(name = "newProcess", partName = "newProcess")
        boolean newProcess,
        @WebParam(name = "overWrite", partName = "overWrite")
        boolean overWrite,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId,
        @WebParam(name = "parentDocumentId", partName = "parentDocumentId")
        int parentDocumentId,
        @WebParam(name = "documentDescription", partName = "documentDescription")
        String documentDescription,
        @WebParam(name = "cardDescription", partName = "cardDescription")
        String cardDescription,
        @WebParam(name = "datasetName", partName = "datasetName")
        String datasetName,
        @WebParam(name = "cardAttachs", partName = "cardAttachs")
        AttachmentArray cardAttachs,
        @WebParam(name = "customEvents", partName = "customEvents")
        CardEventDtoArray customEvents,
        @WebParam(name = "generalInfo", partName = "generalInfo")
        GeneralInfoDto generalInfo,
        @WebParam(name = "update", partName = "update")
        boolean update,
        @WebParam(name = "persistenceType", partName = "persistenceType")
        int persistenceType,
        @WebParam(name = "relatedDatasets", partName = "relatedDatasets")
        StringArray relatedDatasets)
        throws Exception_Exception
    ;

    /**
     * 
     * @param periodId
     * @param password
     * @param companyId
     * @param data
     * @param hora
     * @param prazo
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.DeadLineDto
     * @throws Exception_Exception
     */
    @WebMethod(action = "calculeDeadLineHours")
    @WebResult(name = "result", partName = "result")
    public DeadLineDto calculateDeadLineHours(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "data", partName = "data")
        String data,
        @WebParam(name = "hora", partName = "hora")
        int hora,
        @WebParam(name = "prazo", partName = "prazo")
        int prazo,
        @WebParam(name = "periodId", partName = "periodId")
        String periodId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessDefinitionDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAllProcessAvailableToImport")
    @WebResult(name = "result", partName = "result")
    public ProcessDefinitionDtoArray getAllProcessAvailableToImport(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param cancelText
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "cancelInstance")
    @WebResult(name = "result", partName = "result")
    public String cancelInstance(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "cancelText", partName = "cancelText")
        String cancelText)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param stateSequence
     * @param username
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod(action = "getActualThread")
    @WebResult(name = "ActualThread", partName = "ActualThread")
    public int getActualThread(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "stateSequence", partName = "stateSequence")
        int stateSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod(action = "getWorkFlowProcessVersion")
    @WebResult(name = "result", partName = "result")
    public int getWorkFlowProcessVersion(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param limit
     * @param lastRowId
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessDefinitionVersionDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableProcessOnDemand")
    @WebResult(name = "AvailableProcesses", partName = "AvailableProcesses")
    public ProcessDefinitionVersionDtoArray getAvailableProcessOnDemand(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "limit", partName = "limit")
        int limit,
        @WebParam(name = "lastRowId", partName = "lastRowId")
        int lastRowId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessStateDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableStatesDetail")
    @WebResult(name = "AvailableStatesDetail", partName = "AvailableStatesDetail")
    public ProcessStateDtoArray getAvailableStatesDetail(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns byte[]
     * @throws Exception_Exception
     */
    @WebMethod(action = "exportProcess")
    @WebResult(name = "result", partName = "result")
    public byte[] exportProcessInZipFormat(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentDescription
     * @param customEvents
     * @param datasetName
     * @param update
     * @param cardDescription
     * @param colleagueId
     * @param processAttachs
     * @param newProcess
     * @param password
     * @param companyId
     * @param processId
     * @param cardAttachs
     * @param parentDocumentId
     * @param username
     * @param overWrite
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.WebServiceMessage
     * @throws Exception_Exception
     */
    @WebMethod(action = "importProcessWithCard")
    @WebResult(name = "result", partName = "result")
    public WebServiceMessage importProcessWithCard(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processAttachs", partName = "processAttachs")
        AttachmentArray processAttachs,
        @WebParam(name = "newProcess", partName = "newProcess")
        boolean newProcess,
        @WebParam(name = "overWrite", partName = "overWrite")
        boolean overWrite,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId,
        @WebParam(name = "parentDocumentId", partName = "parentDocumentId")
        int parentDocumentId,
        @WebParam(name = "documentDescription", partName = "documentDescription")
        String documentDescription,
        @WebParam(name = "cardDescription", partName = "cardDescription")
        String cardDescription,
        @WebParam(name = "datasetName", partName = "datasetName")
        String datasetName,
        @WebParam(name = "cardAttachs", partName = "cardAttachs")
        AttachmentArray cardAttachs,
        @WebParam(name = "customEvents", partName = "customEvents")
        CardEventDtoArray customEvents,
        @WebParam(name = "update", partName = "update")
        boolean update)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param processInstanceId
     * @param threadSequence
     * @param comments
     * @param attachments
     * @param colleagueIds
     * @param managerMode
     * @param appointment
     * @param choosedState
     * @param userId
     * @param completeTask
     * @param password
     * @param companyId
     * @param replacementId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArrayArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "saveAndSendTaskByReplacement")
    @WebResult(name = "result", partName = "result")
    public StringArrayArray saveAndSendTaskByReplacement(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "choosedState", partName = "choosedState")
        int choosedState,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "completeTask", partName = "completeTask")
        boolean completeTask,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        StringArrayArray cardData,
        @WebParam(name = "appointment", partName = "appointment")
        ProcessTaskAppointmentDtoArray appointment,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "replacementId", partName = "replacementId")
        String replacementId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param comments
     * @param attachments
     * @param colleagueIds
     * @param managerMode
     * @param appointment
     * @param choosedState
     * @param userId
     * @param completeTask
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "startProcessClassic")
    @WebResult(name = "result", partName = "result")
    public KeyValueDtoArray startProcessClassic(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "choosedState", partName = "choosedState")
        int choosedState,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "completeTask", partName = "completeTask")
        boolean completeTask,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        KeyValueDtoArray cardData,
        @WebParam(name = "appointment", partName = "appointment")
        ProcessTaskAppointmentDtoArray appointment,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param cancelText
     * @param replacementId
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "cancelInstanceByReplacement")
    @WebResult(name = "result", partName = "result")
    public String cancelInstanceByReplacement(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "cancelText", partName = "cancelText")
        String cancelText,
        @WebParam(name = "replacementId", partName = "replacementId")
        String replacementId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param periodId
     * @param password
     * @param companyId
     * @param data
     * @param hora
     * @param prazo
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.DeadLineDto
     * @throws Exception_Exception
     */
    @WebMethod(action = "calculeDeadLineTime")
    @WebResult(name = "result", partName = "result")
    public DeadLineDto calculateDeadLineTime(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "data", partName = "data")
        String data,
        @WebParam(name = "hora", partName = "hora")
        int hora,
        @WebParam(name = "prazo", partName = "prazo")
        int prazo,
        @WebParam(name = "periodId", partName = "periodId")
        String periodId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param password
     * @param companyId
     * @param comments
     * @param attachments
     * @param processId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "simpleStartProcess")
    @WebResult(name = "result", partName = "result")
    public StringArray simpleStartProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        StringArrayArray cardData)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessDefinitionVersionDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableProcess")
    @WebResult(name = "AvailableProcesses", partName = "AvailableProcesses")
    public ProcessDefinitionVersionDtoArray getAvailableProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param comments
     * @param attachments
     * @param colleagueIds
     * @param managerMode
     * @param appointment
     * @param choosedState
     * @param userId
     * @param completeTask
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArrayArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "startProcess")
    @WebResult(name = "result", partName = "result")
    public StringArrayArray startProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "choosedState", partName = "choosedState")
        int choosedState,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "completeTask", partName = "completeTask")
        boolean completeTask,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        StringArrayArray cardData,
        @WebParam(name = "appointment", partName = "appointment")
        ProcessTaskAppointmentDtoArray appointment,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.IntArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAllActiveStates")
    @WebResult(name = "States", partName = "States")
    public IntArray getAllActiveStates(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "relaseProcess")
    @WebResult(name = "result", partName = "result")
    public String releaseProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param comments
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "setTasksComments")
    @WebResult(name = "result", partName = "result")
    public String setTasksComments(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "comments", partName = "comments")
        String comments)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param favorite
     * @param colleagueId
     * @param content
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessDefinitionVersionDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "searchProcess")
    @WebResult(name = "searchResults", partName = "searchResults")
    public ProcessDefinitionVersionDtoArray searchProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId,
        @WebParam(name = "content", partName = "content")
        String content,
        @WebParam(name = "favorite", partName = "favorite")
        boolean favorite)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param limit
     * @param userSearch
     * @param state
     * @param initialUser
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.AvailableUsersDto
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableUsersOnDemand")
    @WebResult(name = "AvailableUsers", partName = "AvailableUsers")
    public AvailableUsersDto getAvailableUsersOnDemand(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "state", partName = "state")
        int state,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "limit", partName = "limit")
        int limit,
        @WebParam(name = "initialUser", partName = "initialUser")
        int initialUser,
        @WebParam(name = "userSearch", partName = "userSearch")
        String userSearch)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod(action = "getProcessFormId")
    @WebResult(name = "result", partName = "result")
    public int getProcessFormId(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cardData
     * @param processInstanceId
     * @param threadSequence
     * @param comments
     * @param attachments
     * @param colleagueIds
     * @param managerMode
     * @param appointment
     * @param choosedState
     * @param userId
     * @param completeTask
     * @param password
     * @param companyId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "saveAndSendTaskClassic")
    @WebResult(name = "result", partName = "result")
    public KeyValueDtoArray saveAndSendTaskClassic(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "choosedState", partName = "choosedState")
        int choosedState,
        @WebParam(name = "colleagueIds", partName = "colleagueIds")
        StringArray colleagueIds,
        @WebParam(name = "comments", partName = "comments")
        String comments,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "completeTask", partName = "completeTask")
        boolean completeTask,
        @WebParam(name = "attachments", partName = "attachments")
        ProcessAttachmentDtoArray attachments,
        @WebParam(name = "cardData", partName = "cardData")
        KeyValueDtoArray cardData,
        @WebParam(name = "appointment", partName = "appointment")
        ProcessTaskAppointmentDtoArray appointment,
        @WebParam(name = "managerMode", partName = "managerMode")
        boolean managerMode,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param threadSequence
     * @param password
     * @param companyId
     * @param processId
     * @param limit
     * @param userSearch
     * @param state
     * @param initialUser
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.AvailableUsersDto
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableUsersStartOnDemand")
    @WebResult(name = "AvailableUsers", partName = "AvailableUsers")
    public AvailableUsersDto getAvailableUsersStartOnDemand(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "state", partName = "state")
        int state,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "limit", partName = "limit")
        int limit,
        @WebParam(name = "initialUser", partName = "initialUser")
        int initialUser,
        @WebParam(name = "userSearch", partName = "userSearch")
        String userSearch)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param state
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableUsers")
    @WebResult(name = "AvailableUsers", partName = "AvailableUsers")
    public StringArray getAvailableUsers(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "state", partName = "state")
        int state,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "getProcessImage")
    @WebResult(name = "Image", partName = "Image")
    public String getProcessImage(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessAttachmentDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAttachments")
    @WebResult(name = "Attachments", partName = "Attachments")
    public ProcessAttachmentDtoArray getAttachments(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentDescription
     * @param persistenceType
     * @param customEvents
     * @param datasetName
     * @param update
     * @param cardDescription
     * @param colleagueId
     * @param processAttachs
     * @param newProcess
     * @param password
     * @param companyId
     * @param processId
     * @param cardAttachs
     * @param parentDocumentId
     * @param username
     * @param overWrite
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.WebServiceMessage
     * @throws Exception_Exception
     */
    @WebMethod(action = "importProcessWithCardAndPersistenceType")
    @WebResult(name = "result", partName = "result")
    public WebServiceMessage importProcessWithCardAndPersistenceType(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processAttachs", partName = "processAttachs")
        AttachmentArray processAttachs,
        @WebParam(name = "newProcess", partName = "newProcess")
        boolean newProcess,
        @WebParam(name = "overWrite", partName = "overWrite")
        boolean overWrite,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId,
        @WebParam(name = "parentDocumentId", partName = "parentDocumentId")
        int parentDocumentId,
        @WebParam(name = "documentDescription", partName = "documentDescription")
        String documentDescription,
        @WebParam(name = "cardDescription", partName = "cardDescription")
        String cardDescription,
        @WebParam(name = "datasetName", partName = "datasetName")
        String datasetName,
        @WebParam(name = "cardAttachs", partName = "cardAttachs")
        AttachmentArray cardAttachs,
        @WebParam(name = "customEvents", partName = "customEvents")
        CardEventDtoArray customEvents,
        @WebParam(name = "update", partName = "update")
        boolean update,
        @WebParam(name = "persistenceType", partName = "persistenceType")
        int persistenceType)
        throws Exception_Exception
    ;

    /**
     * 
     * @param threadSequence
     * @param password
     * @param companyId
     * @param processId
     * @param state
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailableUsersStart")
    @WebResult(name = "AvailableUsers", partName = "AvailableUsers")
    public StringArray getAvailableUsersStart(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "state", partName = "state")
        int state,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentDescription
     * @param persistenceType
     * @param customEvents
     * @param datasetName
     * @param update
     * @param generalInfo
     * @param cardDescription
     * @param colleagueId
     * @param processAttachs
     * @param newProcess
     * @param password
     * @param companyId
     * @param processId
     * @param cardAttachs
     * @param parentDocumentId
     * @param username
     * @param overWrite
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.WebServiceMessage
     * @throws Exception_Exception
     */
    @WebMethod(action = "importProcessWithCardAndGeneralInfo")
    @WebResult(name = "result", partName = "result")
    public WebServiceMessage importProcessWithCardAndGeneralInfo(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processAttachs", partName = "processAttachs")
        AttachmentArray processAttachs,
        @WebParam(name = "newProcess", partName = "newProcess")
        boolean newProcess,
        @WebParam(name = "overWrite", partName = "overWrite")
        boolean overWrite,
        @WebParam(name = "colleagueId", partName = "colleagueId")
        String colleagueId,
        @WebParam(name = "parentDocumentId", partName = "parentDocumentId")
        int parentDocumentId,
        @WebParam(name = "documentDescription", partName = "documentDescription")
        String documentDescription,
        @WebParam(name = "cardDescription", partName = "cardDescription")
        String cardDescription,
        @WebParam(name = "datasetName", partName = "datasetName")
        String datasetName,
        @WebParam(name = "cardAttachs", partName = "cardAttachs")
        AttachmentArray cardAttachs,
        @WebParam(name = "customEvents", partName = "customEvents")
        CardEventDtoArray customEvents,
        @WebParam(name = "generalInfo", partName = "generalInfo")
        GeneralInfoDto generalInfo,
        @WebParam(name = "update", partName = "update")
        boolean update,
        @WebParam(name = "persistenceType", partName = "persistenceType")
        int persistenceType)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param replacementId
     * @param userId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "takeProcessTaskByReplacement")
    @WebResult(name = "result", partName = "result")
    public String takeProcessTaskByReplacement(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence,
        @WebParam(name = "replacementId", partName = "replacementId")
        String replacementId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "exportProcess")
    @WebResult(name = "result", partName = "result")
    public String exportProcess(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param threadSequence
     * @param password
     * @param companyId
     * @param processId
     * @param username
     * @return
     *     returns net.java.dev.jaxb.array.IntArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAvailbleStates")
    @WebResult(name = "States", partName = "States")
    public IntArray getAvailableStates(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processId", partName = "processId")
        String processId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "threadSequence", partName = "threadSequence")
        int threadSequence)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param attachments
     * @param document
     * @param usuario
     * @param username
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "updateWorkflowAttachment")
    @WebResult(name = "result", partName = "result")
    public String updateWorkflowAttachment(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId,
        @WebParam(name = "usuario", partName = "usuario")
        String usuario,
        @WebParam(name = "document", partName = "document")
        DocumentDtoArray document,
        @WebParam(name = "attachments", partName = "attachments")
        AttachmentArray attachments)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processInstanceId
     * @param password
     * @param companyId
     * @param userId
     * @param username
     * @return
     *     returns com.totvs.technology.ecm.workflow.ws.ProcessHistoryDtoArray
     * @throws Exception_Exception
     */
    @WebMethod(action = "getHistories")
    @WebResult(name = "Histories", partName = "Histories")
    public ProcessHistoryDtoArray getHistories(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "companyId", partName = "companyId")
        int companyId,
        @WebParam(name = "userId", partName = "userId")
        String userId,
        @WebParam(name = "processInstanceId", partName = "processInstanceId")
        int processInstanceId)
        throws Exception_Exception
    ;

}
